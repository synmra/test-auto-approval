name: 🚀 PR workflow

on:
  pull_request:
    types: [opened, reopened, closed, synchronize]  # Trigger on PR creation, reopening, and closing
  
  pull_request_review:
    types: [submitted]  # Trigger when a review is submitted

permissions:
  pull-requests: write  # Allow workflow to approve PRs and add labels
  contents: write
  repository-projects: read


jobs:
  add-label:
    runs-on: ubuntu-latest
    if: contains(fromJSON('["opened", "reopened", "synchronize"]'), github.event.action)
    outputs:
      pr_label: ${{ steps.set-label.outputs.pr_label }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      
      - name: Add label based on branch name
        id: set-label
        run: |
          # Extract the branch name (e.g., feature/mr/1234 -> 1234)
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          FEATURE_NUMBER=$(echo "$BRANCH_NAME" | awk -F'/' '{print $NF}')
          PR_LABEL="feature-${FEATURE_NUMBER}"
          HASH=$(echo -n "$FEATURE_NUMBER" | md5sum | awk '{print $1}')
          FEATURE_LABEL_COLOR="#${HASH:0:6}"  # Use first 6 characters of hash for color
          TEST_PR_TITLE=$(echo "${{ github.event.pull_request.title }}" | base64 | base64 --decode)
          
          echo -e "\033[32m📄 Test PR title: $TEST_PR_TITLE"

          # Determine environment label
          if [ "$BASE_BRANCH" = "main" ] || [ "$BASE_BRANCH" = "master" ]; then
            ENV_LABEL="Production"
            ENV_LABEL_COLOR="ff0000"
          elif [ "$BASE_BRANCH" = "develop" ]; then
            ENV_LABEL="Integration"
            ENV_LABEL_COLOR="0000ff"
          elif [ "$BASE_BRANCH" = "test" ]; then
            ENV_LABEL="Test"
            ENV_LABEL_COLOR="ffff00"
          fi
          
          create_label_if_needed() {
            local NAME=$1
            local COLOR=$2

            if [ -n "$NAME" ]; then
              echo "🔍 Checking if label '$NAME' exists..."
              LABEL_EXISTS=$(gh label list --json name -q ".[] | select(.name == \"$NAME\")")

              if [ -z "$LABEL_EXISTS" ]; then
                echo "➕ Creating label '$NAME' with color '$COLOR'"
                gh label create "$NAME" --color "$COLOR" --force
              else
                echo "✅ Label '$NAME' already exists."
              fi

              # Attach label to PR
              gh pr edit ${{ github.event.pull_request.number }} --add-label "$NAME"
            fi
          }
          
          create_label_if_needed "$PR_LABEL" "$FEATURE_LABEL_COLOR"
          create_label_if_needed "$ENV_LABEL" "$ENV_LABEL_COLOR"

          echo "pr_label=$PR_LABEL" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }} 


 
